/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.motorph.usermanagement.view;

import com.motorph.usermanagement.controller.RoleController;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
/**
 *
 * @author Harvey
 */
public class RoleManagementPage extends javax.swing.JPanel {
    private RoleController roleController;

    /**
     * Creates new form RoleManagementPage
     */
    public RoleManagementPage() {
        initComponents();
        setupController();
        setupEventHandlers();
        loadInitialData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelHeader = new javax.swing.JPanel();
        jLabelRoleManagement = new javax.swing.JLabel();
        jPanelSearch = new javax.swing.JPanel();
        jLabelSearchRole = new javax.swing.JLabel();
        jTextFieldSearchRole = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableInfoRole = new javax.swing.JTable();
        jButtonAddRole = new javax.swing.JButton();
        jButtonEditRole = new javax.swing.JButton();
        jButtonDeleteRole = new javax.swing.JButton();
        jButtonViewPermissions = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(844, 0));

        jPanelHeader.setBackground(new java.awt.Color(0, 102, 153));

        jLabelRoleManagement.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabelRoleManagement.setForeground(new java.awt.Color(255, 255, 255));
        jLabelRoleManagement.setText("Role Management");

        javax.swing.GroupLayout jPanelHeaderLayout = new javax.swing.GroupLayout(jPanelHeader);
        jPanelHeader.setLayout(jPanelHeaderLayout);
        jPanelHeaderLayout.setHorizontalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelHeaderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelRoleManagement)
                .addGap(346, 346, 346))
        );
        jPanelHeaderLayout.setVerticalGroup(
            jPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeaderLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabelRoleManagement)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanelSearch.setBackground(new java.awt.Color(51, 204, 0));

        jLabelSearchRole.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabelSearchRole.setForeground(new java.awt.Color(51, 51, 51));
        jLabelSearchRole.setText("Search Role:");

        jTextFieldSearchRole.setForeground(new java.awt.Color(102, 102, 102));
        jTextFieldSearchRole.setText("Enter role name to search");

        jButtonSearch.setForeground(new java.awt.Color(0, 0, 0));
        jButtonSearch.setText("Search");

        jButtonClear.setForeground(new java.awt.Color(0, 0, 0));
        jButtonClear.setText("Clear");

        javax.swing.GroupLayout jPanelSearchLayout = new javax.swing.GroupLayout(jPanelSearch);
        jPanelSearch.setLayout(jPanelSearchLayout);
        jPanelSearchLayout.setHorizontalGroup(
            jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabelSearchRole)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldSearchRole, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        jPanelSearchLayout.setVerticalGroup(
            jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSearchLayout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addGroup(jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSearchRole)
                    .addComponent(jTextFieldSearchRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearch)
                    .addComponent(jButtonClear))
                .addGap(38, 38, 38))
        );

        jTableInfoRole.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Role ID", "Role Name", "Description", "User Count"
            }
        ));
        jTableInfoRole.setSize(new java.awt.Dimension(844, 0));
        jScrollPane1.setViewportView(jTableInfoRole);

        jButtonAddRole.setText("Add Role");

        jButtonEditRole.setText("Edit Role");

        jButtonDeleteRole.setText("Delete Role");

        jButtonViewPermissions.setText("View Permissions");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonAddRole, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(80, 80, 80)
                                .addComponent(jButtonEditRole, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonDeleteRole, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)
                                .addComponent(jButtonViewPermissions))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 771, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddRole)
                    .addComponent(jButtonEditRole)
                    .addComponent(jButtonViewPermissions)
                    .addComponent(jButtonDeleteRole))
                .addContainerGap(95, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Initialize the controller
     */
    private void setupController() {
        this.roleController = new RoleController(this);
    }
    
    /**
     * Setup event handlers for all buttons and components
     */
    private void setupEventHandlers() {
        // Add Role Button
        jButtonAddRole.addActionListener(e -> addRole());
        
        // Edit Role Button
        jButtonEditRole.addActionListener(e -> editRole());
        
        // Delete Role Button
        jButtonDeleteRole.addActionListener(e -> deleteRole());
        
        // View Permissions Button
        jButtonViewPermissions.addActionListener(e -> viewPermissions());
        
        // Search Button
        jButtonSearch.addActionListener(e -> searchRoles());
        
        // Clear Button
        jButtonClear.addActionListener(e -> clearSearch());
        
        // Table selection listener
        jTableInfoRole.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                updateButtonStates();
            }
        });
        
        // Clear placeholder text when focused
        jTextFieldSearchRole.addFocusListener(new java.awt.event.FocusAdapter() {
            @Override
            public void focusGained(java.awt.event.FocusEvent evt) {
                if (jTextFieldSearchRole.getText().equals("Enter role name to search")) {
                    jTextFieldSearchRole.setText("");
                }
            }
            @Override
            public void focusLost(java.awt.event.FocusEvent evt) {
                if (jTextFieldSearchRole.getText().isEmpty()) {
                    jTextFieldSearchRole.setText("Enter role name to search");
                }
            }
        });
        
        // Search on Enter key
        jTextFieldSearchRole.addActionListener(e -> searchRoles());
    }
    
    /**
     * Load initial data when the form opens
     */
    private void loadInitialData() {
        if (roleController != null) {
            roleController.loadAllRoles();
        }
    }
    
    /**
     * Add a new role
     */
    private void addRole() {
        String roleName = JOptionPane.showInputDialog(this, "Enter Role Name:", "Add Role", JOptionPane.PLAIN_MESSAGE);
        
        if (roleName != null && !roleName.trim().isEmpty()) {
            String roleDescription = JOptionPane.showInputDialog(this, "Enter Role Description (optional):", "Add Role", JOptionPane.PLAIN_MESSAGE);
            
            if (roleDescription == null) {
                roleDescription = "";
            }
            
            roleController.createRole(roleName.trim(), roleDescription.trim());
        }
    }
    
    /**
     * Edit selected role
     */
    private void editRole() {
        int selectedRow = jTableInfoRole.getSelectedRow();
        
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a role to edit", "No Selection", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        // Get current role data
        int roleId = (Integer) jTableInfoRole.getValueAt(selectedRow, 0);
        String currentName = (String) jTableInfoRole.getValueAt(selectedRow, 1);
        String currentDescription = (String) jTableInfoRole.getValueAt(selectedRow, 2);
        
        // Get new role name
        String newRoleName = (String) JOptionPane.showInputDialog(
            this,
            "Enter Role Name:",
            "Edit Role",
            JOptionPane.PLAIN_MESSAGE,
            null,
            null,
            currentName
        );
        
        if (newRoleName != null && !newRoleName.trim().isEmpty()) {
            // Get new role description
            String newRoleDescription = (String) JOptionPane.showInputDialog(
                this,
                "Enter Role Description (optional):",
                "Edit Role",
                JOptionPane.PLAIN_MESSAGE,
                null,
                null,
                currentDescription
            );
            
            if (newRoleDescription == null) {
                newRoleDescription = "";
            }
            
            roleController.updateRole(roleId, newRoleName.trim(), newRoleDescription.trim());
        }
    }
    
    /**
     * Delete selected role
     */
    private void deleteRole() {
        int selectedRow = jTableInfoRole.getSelectedRow();
        
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a role to delete", "No Selection", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        int roleId = (Integer) jTableInfoRole.getValueAt(selectedRow, 0);
        String roleName = (String) jTableInfoRole.getValueAt(selectedRow, 1);
        
        int confirm = JOptionPane.showConfirmDialog(
            this,
            "Are you sure you want to delete the role '" + roleName + "'?\nThis action cannot be undone.",
            "Confirm Delete",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE
        );
        
        if (confirm == JOptionPane.YES_OPTION) {
            roleController.deleteRole(roleId);
        }
    }
    
    /**
     * View permissions for selected role
     */
    private void viewPermissions() {
        int selectedRow = jTableInfoRole.getSelectedRow();
        
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a role to view permissions", "No Selection", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String roleName = (String) jTableInfoRole.getValueAt(selectedRow, 1);
        
        // For now, just show a message. and can implement permission viewing later
        JOptionPane.showMessageDialog(this, "Viewing permissions for role: " + roleName, "View Permissions", JOptionPane.INFORMATION_MESSAGE);
    }
    
    /**
     * Search roles
     */
    private void searchRoles() {
        String searchTerm = jTextFieldSearchRole.getText().trim();
        
        if (!searchTerm.isEmpty() && !searchTerm.equals("Enter role name to search")) {
            roleController.searchRoles(searchTerm);
        } else {
            roleController.loadAllRoles();
        }
    }
    
    /**
     * Clear search and reload all roles
     */
    private void clearSearch() {
        jTextFieldSearchRole.setText("Enter role name to search");
        roleController.loadAllRoles();
    }
    
    /**
     * Update button states based on table selection
     */
    private void updateButtonStates() {
        boolean hasSelection = jTableInfoRole.getSelectedRow() >= 0;
        jButtonEditRole.setEnabled(hasSelection);
        jButtonDeleteRole.setEnabled(hasSelection);
        jButtonViewPermissions.setEnabled(hasSelection);
    }
    
    /**
     * Sets the table model for the role table.
     * This method is called by the RoleController to update the table data.
     * 
     * @param tableModel the DefaultTableModel to set for the role table
     */
    public void setTableModel(DefaultTableModel tableModel) {
        if (jTableInfoRole != null) {
            jTableInfoRole.setModel(tableModel);
            
            // Auto-resize columns to fit content
            jTableInfoRole.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
            
            // Set column widths for better display
            if (tableModel.getColumnCount() > 0) {
                javax.swing.table.TableColumnModel columnModel = jTableInfoRole.getColumnModel();
                
                // Set preferred widths for each column
                columnModel.getColumn(0).setPreferredWidth(80);  // Role ID
                columnModel.getColumn(1).setPreferredWidth(200); // Role Name
                columnModel.getColumn(2).setPreferredWidth(250); // Description
                columnModel.getColumn(3).setPreferredWidth(90);  // User Count
            }
            
            // Update button states after table update
            updateButtonStates();
            
            // Refresh the table display
            jTableInfoRole.revalidate();
            jTableInfoRole.repaint();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddRole;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonDeleteRole;
    private javax.swing.JButton jButtonEditRole;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonViewPermissions;
    private javax.swing.JLabel jLabelRoleManagement;
    private javax.swing.JLabel jLabelSearchRole;
    private javax.swing.JPanel jPanelHeader;
    private javax.swing.JPanel jPanelSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableInfoRole;
    private javax.swing.JTextField jTextFieldSearchRole;
    // End of variables declaration//GEN-END:variables
}
